{"version":3,"sources":["actions/setActivePage.js","actions/setSelectedProductId.js","reducers/appReducer.js","components/Cart.react.js","actions/removeFromCart.js","actions/emptyCart.js","components/CategoriesList.react.js","actions/setCategoryAction.js","actions/setSearchTerm.js","components/NavBar.react.js","actions/toggleCartTab.js","components/Product.react.js","actions/addToCart.js","components/ProductList.react.js","components/ShowSearch.react.js","components/App.react.js","actions/productsActions.js","reducers/cartReducer.js","reducers/productsReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["setActivePage","page","type","payload","setSelectedProductId","id","Pages","initialState","selectedCategory","activePage","selectedProductId","searchTerm","useStyles","makeStyles","theme","container","marginTop","height","media","maxWidth","maxHeight","marginRight","cartItem","marginBottom","cursor","Cart","classes","itemsInCart","useSelector","state","cart","productsById","products","dispatch","useDispatch","Grid","className","direction","alignItems","item","lg","Object","entries","map","justify","onClick","match","src","image","alt","title","text","slice","category","Box","button","Button","variant","color","removeFromCart","card","minWidth","margin","textAlign","textTransform","CategoriesList","productsGrouped","keys","index","Card","CardActionArea","CardMedia","CardContent","Typography","component","CircularProgress","disableShrink","setSearchTerm","term","root","flexGrow","menuButton","spacing","homeIcon","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","pointerEvents","justifyContent","inputInput","paddingLeft","transition","transitions","create","inputRoot","NavBar","app","split","length","AppBar","Toolbar","IconButton","HomeSharp","noWrap","SearchSharp","InputBase","onChange","event","target","value","placeholder","input","inputProps","values","reduce","a","b","parseInt","ShoppingCartRounded","ShoppingCartOutlined","fontWeight","price","buttonCart","productTextContainer","formControl","formControlQuantity","selectorContainer","Sizes","extraSmall","small","medium","large","Product","useState","itemSize","setItemSize","itemQuantity","setItemQuantity","itemInCart","description","FormControl","InputLabel","Select","MenuProps","disableScrollLock","labelId","MenuItem","htmlFor","Input","min","max","size","overflow","ProductList","ShowSearch","searchedProducts","mainContainer","cartHide","cartShow","border","App","originalData","showCart","useEffect","fetch","then","response","json","data","foundItem","filter","toLowerCase","includes","s","showComponents","rootReducer","combineReducers","action","newData","obj","push","idSize","updatedCart","accumulator","key","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15cd584f.chunk.js","sourcesContent":["export const setActivePage = (page) => ({\r\n    type:\"SET_ACTIVE_PAGE\",\r\n    payload: page\r\n})","export const setSelectedProductId = (id) => ({\r\n    type:\"SET_SELECTED_PRODUCT_ID\",\r\n    payload: id\r\n})","export const Pages = {home:\"home\",category:\"category\",product:\"product\",search:\"search\"}\r\n\r\nconst initialState = {\r\n    selectedCategory:\"\",\r\n    activePage:\"\",\r\n    selectedProductId:null,\r\n    searchTerm:\"\"\r\n}\r\nexport default function appReducer(state=initialState,action) {\r\n    switch(action.type) {\r\n        case \"SET_CATEGORY\":\r\n            return {\r\n                ...state,\r\n                selectedCategory:action.payload\r\n            }\r\n            case \"SET_ACTIVE_PAGE\":\r\n                return {\r\n                    ...state,\r\n                    activePage:action.payload\r\n                }\r\n            case \"SET_SELECTED_PRODUCT_ID\":\r\n            return {\r\n                ...state,\r\n                selectedProductId:action.payload\r\n            }\r\n            case \"SET_SEARCH_TERM\":\r\n            return {\r\n                ...state,\r\n                searchTerm:action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { Box, Button, Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { emptyCart } from '../actions/emptyCart';\r\nimport { removeFromCart } from '../actions/removeFromCart';\r\nimport { setActivePage } from '../actions/setActivePage';\r\nimport { setSelectedProductId } from '../actions/setSelectedProductId';\r\nimport { Pages } from '../reducers/appReducer';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    container: {\r\n        marginTop:100,\r\n        height:'100vh'\r\n    },\r\n    media: {\r\n        maxWidth:80,\r\n        maxHeight:80,\r\n        marginRight:50\r\n    },\r\n    cartItem: {\r\n        marginBottom:50,\r\n        \"&:hover\": {\r\n            cursor:'pointer'\r\n        }\r\n    }\r\n    \r\n}))\r\n\r\nfunction Cart() {\r\n    const classes = useStyles()\r\n    const {itemsInCart} = useSelector(state=>state.cart)\r\n    const {productsById} = useSelector(state=>state.products)\r\n    const dispatch = useDispatch()\r\n    \r\n    return(\r\n        <Grid container className={classes.container} direction=\"column\" alignItems=\"center\">\r\n            <Grid item lg={10}>\r\n                {itemsInCart?Object.entries(itemsInCart).map(item=>(\r\n                <Grid \r\n                    container \r\n                    direction=\"row\"  \r\n                    justify=\"space-around\" \r\n                    alignItems=\"center\" \r\n                    className= {classes.cartItem}\r\n                    onClick={()=>{dispatch(setSelectedProductId(item[0].match(/(\\d+)/)[0])); dispatch(setActivePage(Pages.product))}} \r\n                >\r\n                    <Grid item lg={4}>\r\n                        <img src={productsById[item[0].match(/(\\d+)/)[0]].image} alt={productsById[item[0].match(/(\\d+)/)[0]].title} className= {classes.media}/>\r\n                    </Grid>    \r\n                    <Grid item lg={8}>\r\n                        <Grid item>\r\n                            <p className= {classes.text}>{item[1]}*{productsById[item[0].match(/(\\d+)/)[0]].title.slice(0, 16)}...</p>\r\n                        </Grid>\r\n                        {productsById[item[0].match(/(\\d+)/)[0]].category === \"men clothing\" ||\r\n                         productsById[item[0].match(/(\\d+)/)[0]].category === \"women clothing\" \r\n                        ?<Grid item>\r\n                            <p className= {classes.text}>Size: {item[0].match(/[a-zA-Z]/)} </p>\r\n                        </Grid>:null}\r\n                        <Grid item>\r\n                            <Box className={classes.button}>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={()=>dispatch(removeFromCart(item[0]))}>Remove</Button>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                )):'Cart is empty'}\r\n            </Grid>\r\n            <Grid item lg={2}>\r\n                <Box className={classes.button}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>dispatch(emptyCart())}>Checkout</Button>\r\n                </Box> \r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Cart","export const removeFromCart = (item) => ({\r\n    type:\"REMOVE_FROM_CART\",\r\n    payload: item\r\n})","export const emptyCart = () => ({\r\n    type:\"EMPTY_CART\"\r\n})","import React from 'react';\r\nimport {Card, CardActionArea, CardContent, CardMedia, CircularProgress, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCategory } from '../actions/setCategoryAction';\r\nimport { setActivePage } from '../actions/setActivePage';\r\nimport { Pages } from '../reducers/appReducer';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth:250,\r\n        maxWidth:250,\r\n        maxHeight:345,\r\n        margin:20\r\n    },\r\n    media: {\r\n        height:270\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n        margin:50,\r\n        marginTop:100  \r\n    },\r\n    text: {\r\n        textTransform: \"capitalize\"\r\n    }\r\n})\r\n\r\n\r\nfunction CategoriesList() {\r\n    \r\n    const classes = useStyles()\r\n    const {productsGrouped} = useSelector(state=>state.products)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <>\r\n            <h1 className={classes.title}>Welcome to Czezar's Mart</h1>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n            >\r\n            {productsGrouped?Object.keys(productsGrouped).map((item,index)=>(\r\n                <Card className={classes.card} key={index}>\r\n                    <CardActionArea onClick={()=>{dispatch(setCategory(item)); dispatch(setActivePage(Pages.category))}}>\r\n                        <CardMedia\r\n                            className= {classes.media}\r\n                            image = {productsGrouped[item][0].image}\r\n                            title = {productsGrouped[item][0].title}\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                {item} \r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            )):<CircularProgress disableShrink />}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoriesList","export const setCategory = (category) => ({\r\n    type:\"SET_CATEGORY\",\r\n    payload: category\r\n})","export const setSearchTerm = (term) => ({\r\n    type:\"SET_SEARCH_TERM\",\r\n    payload: term\r\n})","import { AppBar, fade, IconButton, InputBase, makeStyles, Toolbar, Typography } from '@material-ui/core';\r\nimport { HomeSharp, SearchSharp, ShoppingCartOutlined, ShoppingCartRounded } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setActivePage } from '../actions/setActivePage';\r\nimport { setSearchTerm } from '../actions/setSearchTerm';\r\nimport { toggleCartTab } from '../actions/toggleCartTab';\r\nimport { Pages } from '../reducers/appReducer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n      },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n    homeIcon: {\r\n        color:'white'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'block',\r\n        },\r\n      },\r\n      search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        marginRight: 30,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(1),\r\n          width: 'auto',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: '12ch',\r\n          '&:focus': {\r\n            width: '20ch',\r\n          },\r\n        },\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      }\r\n}))\r\n\r\nfunction NavBar() {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const {searchTerm} = useSelector(state=>state.app)\r\n    const {itemsInCart} = useSelector(state=>state.cart)\r\n    const searchLength = searchTerm?.split('').length\r\n    const search = searchLength >= 2 ? true : false\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <IconButton className={classes.menuButton} onClick={()=>dispatch(setActivePage(Pages.home))}>\r\n                        <HomeSharp className={classes.homeIcon}/>\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Czezar's Mart\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchSharp />\r\n                        </div>\r\n                    <InputBase\r\n                        onChange={(event)=>{dispatch(setSearchTerm(event.target.value)); \r\n                                            search ? dispatch(setActivePage(Pages.search)) : dispatch(setActivePage(Pages.home))}}\r\n                        value={searchTerm}\r\n                        placeholder=\"Search…\"\r\n                        classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                    />\r\n                    </div>\r\n                    <span>{itemsInCart?Object.values(itemsInCart).reduce((a,b) => parseInt(a) + parseInt(b), 0):null}</span>\r\n                    <IconButton onClick={()=>dispatch(toggleCartTab())}>\r\n                      {itemsInCart?<ShoppingCartRounded className={classes.homeIcon}/>:<ShoppingCartOutlined className={classes.homeIcon}/>}\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","export const toggleCartTab = () => ({\r\n    type:\"TOGGLE_CART_TAB\"\r\n})","import { Box, Button, FormControl, Grid, Input, InputLabel, makeStyles, MenuItem, Select, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart } from \"../actions/addToCart\";\r\nimport { setActivePage } from \"../actions/setActivePage\";\r\nimport { Pages } from \"../reducers/appReducer\";\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth:250,\r\n        maxWidth:250,\r\n        maxHeight:500,\r\n        margin:20\r\n    },\r\n    media: {\r\n        maxWidth:500,\r\n        maxHeight:500,\r\n        marginTop:100\r\n    },\r\n    title: {\r\n        textTransform: \"capitalize\",\r\n        textAlign: 'center',\r\n        margin:50 \r\n    },\r\n    text: {\r\n        marginBottom:30,\r\n        marginTop:100,\r\n        fontWeight: \"bold\"\r\n    },\r\n    price: {\r\n        marginTop: 25,\r\n        fontWeight: \"bold\",\r\n        marginBottom:30\r\n    },\r\n    button: {\r\n        textAlign: \"center\",\r\n        marginTop: 50,\r\n        marginBottom: 50\r\n    },\r\n    buttonCart: {\r\n        marginBottom: 50\r\n    },\r\n    container: {\r\n        width: 800,\r\n        margin: \"auto\"\r\n    },\r\n    productTextContainer: {\r\n        maxWidth:1500,\r\n        marginRight:100\r\n    },\r\n    formControl: {\r\n        minWidth:90,\r\n        marginRight:20\r\n    },\r\n    formControlQuantity: {\r\n        maxWidth:90\r\n    },\r\n    selectorContainer: {\r\n        marginBottom:30\r\n    }\r\n})\r\n\r\nexport const Sizes = {extraSmall:\"X\",small:\"S\",medium:\"M\",large:\"L\"}\r\n\r\nfunction Product() {\r\n    const {selectedProductId} = useSelector(state=>state.app)\r\n    const {productsById} = useSelector(state=>state.products)\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [itemSize, setItemSize] = useState('')\r\n    const [itemQuantity, setItemQuantity] = useState('')\r\n\r\n    const itemInCart = `${selectedProductId}_${itemSize}`\r\n\r\n    return (\r\n        <>\r\n            {productsById && selectedProductId?<Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={3}\r\n            >\r\n                <Grid\r\n                    item\r\n                    container\r\n                    justify=\"center\"\r\n                    lg\r\n                >\r\n                    <img src={productsById[selectedProductId].image} alt={productsById[selectedProductId].title} className= {classes.media}/>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    container\r\n                    justify=\"flex-start\"\r\n                    className= {classes.productTextContainer}\r\n                    lg={8}\r\n                >\r\n                    <Typography variant=\"h2\"className= {classes.text}>\r\n                            {productsById[selectedProductId].title}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                            {productsById[selectedProductId].description}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" className= {classes.price}>\r\n                            Price: ${productsById[selectedProductId].price}\r\n                    </Typography>\r\n                    <Grid\r\n                        container\r\n                        className= {classes.selectorContainer}\r\n                    >\r\n                        {productsById[selectedProductId].category === \"electronics\" || productsById[selectedProductId].category === \"jewelery\" \r\n                        ? null : <FormControl className= {classes.formControl}>\r\n                            <InputLabel id=\"select-size\">Size</InputLabel>\r\n                            <Select\r\n                                MenuProps={{ disableScrollLock: true}}\r\n                                labelId=\"select-size\"\r\n                                id=\"size\"\r\n                                value={itemSize}\r\n                                onChange={event=>setItemSize(event.target.value)}\r\n                            >\r\n                                {Object.keys(Sizes).map((item, index)=>(\r\n                                   <MenuItem key={index} value={Sizes[item]}>{Sizes[item]}</MenuItem> \r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>}\r\n                        <FormControl className= {classes.formControlQuantity}>\r\n                            <InputLabel htmlFor='quantity'>Quantity</InputLabel>\r\n                            <Input id='quantity' type='number' value={itemQuantity} inputProps={{ min: 0, max: 100000}}\r\n                                onChange={event=>setItemQuantity(event.target.value)}/>\r\n                        </FormControl>\r\n\r\n                    </Grid>\r\n                    <Box className={classes.buttonCart}>\r\n                        <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={()=>dispatch(addToCart({[itemInCart]:parseInt(itemQuantity)}))}>\r\n                            ADD TO CART\r\n                        </Button>\r\n                    </Box> \r\n                </Grid>\r\n            </Grid>:null}\r\n            <Box className={classes.button}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>dispatch(setActivePage(Pages.category))} >Back</Button>\r\n            </Box> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Product","export const addToCart = (item) => ({\r\n    type:\"ADD_TO_CART\",\r\n    payload: item\r\n})","import { Box, Button, Card, CardActionArea, CardContent, CardMedia, CircularProgress, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setActivePage } from \"../actions/setActivePage\";\r\nimport { setSelectedProductId } from \"../actions/setSelectedProductId\";\r\nimport { Pages } from \"../reducers/appReducer\";\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth:250,\r\n        maxWidth:250,\r\n        maxHeight:500,\r\n        margin:20\r\n    },\r\n    media: {\r\n        height:270\r\n    },\r\n    title: {\r\n        textTransform: \"capitalize\",\r\n        textAlign: 'center',\r\n        margin:50,\r\n        marginTop:100 \r\n    },\r\n    text: {\r\n        textTransform: \"capitalize\",\r\n        height:30,\r\n        overflow:\"hidden\"\r\n    },\r\n    price: {\r\n        marginTop: 15,\r\n        fontWeight: \"bold\"\r\n    },\r\n    button: {\r\n        textAlign: \"center\",\r\n        marginTop: 50,\r\n        marginBottom: 50\r\n    },\r\n    container: {\r\n        width: \"45%\",\r\n        margin: \"auto\"\r\n    }\r\n})\r\n\r\n\r\nfunction ProductList() {\r\n    \r\n    const {productsGrouped} = useSelector(state=>state.products)\r\n    const {selectedCategory} = useSelector(state=>state.app)\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    \r\n    return (\r\n        <>\r\n            <h1 className={`${classes.title}`} >{selectedCategory}</h1>\r\n            {productsGrouped ? <Grid\r\n                container\r\n                spacing={6}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.container}\r\n            >\r\n                {productsGrouped[selectedCategory].map((item,index)=>(\r\n                    <Grid\r\n                        key={item.id}\r\n                        item\r\n                    >\r\n                        <Card key={item.id} className={classes.card} >\r\n                            <CardActionArea onClick={()=>{dispatch(setSelectedProductId(item.id)); dispatch(setActivePage(Pages.product))}}>\r\n                                <CardMedia\r\n                                    className= {classes.media}\r\n                                    image = {item.image}\r\n                                    title = {item.title}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                        {item.title}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h5\" component=\"h3\" className={classes.price}>\r\n                                        Price: ${item.price}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid> : <Box className={classes.button}><CircularProgress disableShrink/></Box>}\r\n            <Box className={classes.button}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>dispatch(setActivePage(Pages.home))} >Back</Button>\r\n            </Box>  \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductList","import { Box, Button, Card, CardActionArea, CardContent, CardMedia, CircularProgress, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setActivePage } from \"../actions/setActivePage\";\r\nimport { setSearchTerm } from \"../actions/setSearchTerm\";\r\nimport { setSelectedProductId } from \"../actions/setSelectedProductId\";\r\nimport { Pages } from \"../reducers/appReducer\";\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    card: {\r\n        minWidth:250,\r\n        maxWidth:250,\r\n        maxHeight:500,\r\n        margin:20\r\n    },\r\n    media: {\r\n        height:270\r\n    },\r\n    title: {\r\n        textTransform: \"capitalize\",\r\n        textAlign: 'center',\r\n        margin:50,\r\n        marginTop:100 \r\n    },\r\n    text: {\r\n        textTransform: \"capitalize\",\r\n        height:30,\r\n        overflow:\"hidden\"\r\n    },\r\n    price: {\r\n        marginTop: 15,\r\n        fontWeight: \"bold\"\r\n    },\r\n    button: {\r\n        textAlign: \"center\",\r\n        [theme.breakpoints.up('sm')]: {\r\n            textAlign: \"right\"\r\n          },\r\n        marginTop: 100,\r\n        marginBottom: 50,\r\n        marginRight: 70\r\n    },\r\n    container: {\r\n        width: 800,\r\n        margin: \"auto\"\r\n    }\r\n}))\r\n\r\nfunction ShowSearch({searchedProducts}) {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    \r\n    return (\r\n        <>\r\n            <Box className={classes.button}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>{dispatch(setSearchTerm(\"\")); dispatch(setActivePage(Pages.home))}} >Clear Search</Button>\r\n            </Box>\r\n            {searchedProducts ? <Grid\r\n                container\r\n                spacing={6}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.container}\r\n            >\r\n                {searchedProducts.map((item,index)=>(\r\n                    <Grid\r\n                        key={item.id}\r\n                        item\r\n                    >\r\n                        <Card key={item.id} className={classes.card} >\r\n                            <CardActionArea onClick={()=>{dispatch(setSelectedProductId(item.id)); dispatch(setActivePage(Pages.product))}}>\r\n                                <CardMedia\r\n                                    className= {classes.media}\r\n                                    image = {item.image}\r\n                                    title = {item.title}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                        {item.title}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h5\" component=\"h3\" className={classes.price}>\r\n                                        Price: ${item.price}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid> : <Box className={classes.button}><CircularProgress disableShrink/></Box>} \r\n        </>\r\n        \r\n    )\r\n      \r\n}\r\n\r\nexport default ShowSearch","import { Grid, makeStyles } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { populateProducts } from '../actions/productsActions';\r\nimport { setActivePage } from '../actions/setActivePage';\r\nimport Cart from './Cart.react';\r\nimport CategoriesList from './CategoriesList.react';\r\nimport NavBar from './NavBar.react';\r\nimport Product from './Product.react';\r\nimport ProductList from './ProductList.react';\r\nimport ShowSearch from './ShowSearch.react';\r\n\r\nconst useStyles = makeStyles({\r\n  mainContainer: {\r\n      height:'100vh'\r\n  },\r\n  cartHide: {\r\n      display:'none',\r\n      width:'100%'\r\n  },\r\n  cartShow: {\r\n    display:'block',\r\n    width:'100%',\r\n    border:'1px solid lightgrey'\r\n}\r\n})\r\n\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles()\r\n  const {activePage} = useSelector(state=>state.app)\r\n  const {originalData} = useSelector(state=>state.products)\r\n  const {searchTerm} = useSelector(state=>state.app)\r\n  const dispatch = useDispatch()\r\n  const {showCart} = useSelector(state=>state.cart)\r\n  \r\n\r\n  useEffect(()=>{\r\n    dispatch(populateProducts())\r\n    dispatch(setActivePage(\"home\"))\r\n  },[dispatch])\r\n\r\n  const foundItem = originalData && searchTerm?originalData.filter(item => (item.title.toLowerCase().includes(searchTerm))\r\n  || item.category.toLowerCase().includes(searchTerm) || item.description.toLowerCase().includes(searchTerm))\r\n  :null\r\n\r\n  const showComponents = (page) => {\r\n    switch(page) {\r\n      case \"home\":\r\n        return <CategoriesList/>\r\n      case \"category\":\r\n        return <ProductList/>\r\n      case \"product\":\r\n        return <Product/>\r\n      case \"search\":\r\n        return <ShowSearch searchedProducts={foundItem} />\r\n      default:\r\n        return <CategoriesList/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar/>\r\n      <Grid container className={classes.mainContainer}>\r\n        <Grid s={12} lg={showCart?10:12}  item>{showComponents(activePage)}</Grid>\r\n        <Grid lg={2} s={12} item className={showCart?classes.cartShow:classes.cartHide}><Cart/></Grid>\r\n      </Grid>\r\n    </>\r\n\r\n  )\r\n  \r\n}\r\n\r\nexport default App;\r\n","export function populateProducts() {\r\n    return (dispatch)=> {\r\n        fetch(\"https://fakestoreapi.com/products\")\r\n           \t\t.then(response => response.json())\r\n           \t\t.then(data => {\r\n                    dispatch({\r\n                        type:\"POPULATE_PRODUCTS\",\r\n                        payload: data\r\n                    })\r\n                   })\r\n    }\r\n}","const initialState = {\r\n    showCart:false,\r\n    itemsInCart:null\r\n}\r\nexport default function cartReducer(state=initialState,action) {\r\n    switch(action.type) {\r\n        case \"TOGGLE_CART_TAB\":\r\n            return {\r\n                ...state,\r\n                showCart:!state.showCart\r\n            }\r\n        case \"ADD_TO_CART\":\r\n            const idSize = Object.keys(action.payload)[0]\r\n            let item = state.itemsInCart?state.itemsInCart[idSize]:null\r\n            item?item = item + action.payload[idSize]:item = action.payload[idSize]\r\n            return {\r\n                ...state,\r\n                itemsInCart:{\r\n                    ...state.itemsInCart,\r\n                    [idSize]:item\r\n                }\r\n            }\r\n        case \"REMOVE_FROM_CART\":\r\n            const updatedCart = Object.keys(state.itemsInCart).reduce((accumulator, key) => {\r\n                if(key !== action.payload){\r\n                    accumulator[key] = state.itemsInCart[key]\r\n                }\r\n                return accumulator\r\n            }, {})\r\n            return {\r\n                ...state,\r\n                itemsInCart:updatedCart\r\n            }\r\n        case \"EMPTY_CART\":\r\n                return {\r\n                    ...state,\r\n                    itemsInCart:null\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    originalData:null,\r\n    productsGrouped:null,\r\n    productsById:null\r\n}\r\nexport default function productsReducer(state = initialState,action) {\r\n    switch(action.type) {\r\n        case\"POPULATE_PRODUCTS\":\r\n        \r\n        const newData = action.payload.reduce(function (obj, item) {\r\n            obj[item.category] = obj[item.category] || [];\r\n            obj[item.category].push(item);\r\n            return obj;\r\n        }, Object.create(null));\r\n\r\n        const productsById = action.payload.reduce(function (obj, item) {\r\n            obj[item.id] = item\r\n            return obj;\r\n        }, Object.create(null));\r\n\r\n                return {\r\n                    ...state,\r\n                    originalData:action.payload,\r\n                    productsGrouped:newData,\r\n                    productsById:productsById\r\n                }  \r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"@reduxjs/toolkit\"\r\nimport appReducer from \"./appReducer\"\r\nimport cartReducer from \"./cartReducer\"\r\nimport productsReducer from \"./productsReducer\"\r\n\r\nconst rootReducer = combineReducers(\r\n    {\r\n        products:productsReducer,\r\n        app:appReducer,\r\n        cart:cartReducer\r\n    }\r\n)\r\nexport default rootReducer","import { applyMiddleware, createStore } from \"@reduxjs/toolkit\"\r\nimport rootReducer from \"./reducers/rootReducer\"\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\nstore.subscribe(()=>{\r\n    console.log(store.getState())\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.react';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./store\"\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n        <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}